============================================================
       백엔드 모델(Schema) 통일성 및 버그 수정 요청서
============================================================

1. 문제 상황 요약
------------------------------------------------------------
- 서버 실행 시 `ReferenceError: [ModelName] is not defined` 에러가 발생하며 서버가 시작되지 않는 문제가 확인되었습니다.
- `Product.js`, `ChatRoom.js` 등 일부 모델 파일에서 스키마를 정의한 후, `mongoose.model()`을 사용하여 모델로 컴파일하는 코드가 누락되었습니다.
- 또한, 일부 모델(`Product.js`, `ChatRoom.js` 등)이 아직 Mongoose 표준 방식(`_id` 사용)이 아닌 수동 `id` 필드를 사용하고 있어, 추후 다른 버그를 유발할 가능성이 높습니다.

2. 해결 목표
------------------------------------------------------------
- 모든 모델 파일의 구조를 표준화하여 서버 실행 오류를 해결합니다.
- 프로젝트의 모든 데이터 모델을 Mongoose 표준 방식인 `_id`를 기본 키로 사용하도록 통일하여 데이터 구조의 일관성을 확보하고 잠재적인 버그를 예방합니다.

3. 수정 지시 사항
------------------------------------------------------------

[1. 모든 모델 파일 구조 통일]

- 지시: `backend/models` 폴더 안에 있는 모든 `.js` 파일(예: `User.js`, `Post.js`, `Product.js`, `ChatRoom.js`, `Follow.js` 등)을 열어주세요.
- 확인: 각 파일의 맨 아래 부분이 반드시 아래와 같은 3단계 구조로 되어 있는지 확인하고, 누락된 부분이 있다면 수정해주세요.

  ```javascript
  // 1단계: 스키마 정의 (이미 작성되어 있음)
  const YourSchemaName = new mongoose.Schema({ ... });

  // (선택사항이지만 권장) virtual 필드 추가
  YourSchemaName.virtual('id').get(function() {
      return this._id.toHexString();
  });

  // 2단계: 스키마를 모델로 컴파일 (이 부분이 누락되었을 수 있음)
  const YourModelName = mongoose.model('YourModelName', YourSchemaName);

  // 3단계: 생성된 모델을 export
  export default YourModelName;